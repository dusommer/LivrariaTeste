@model AdicionarLivroRequest
@using TesteHBSIS.WebApp.Models.Args;
@{
    ViewBag.Title = "Cadastro de livro";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="row justify-content-center">
            <div class=" col-md-9 col-lg-7 col-xl-5">
                <div class="card o-hidden border-0 shadow-lg my-5">
                    <div class="card-body p-0">
                        <div class="row">
                            <div class="col-12">
                                <div class="p-5">
                                    <div class="text-center">
                                        <h1 class="h4 text-gray-900 mb-4">Registro de Livro</h1>
                                    </div>
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { placeholder = "Título", @class = "form-control form-control-user", Title = "Título" } })
                                        @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.DropDownListFor(model => model.IdAutor, new SelectList(ViewBag.Autores as List<AutorResponse>, "id", "nome"), "Nenhum autor...", htmlAttributes: new { placeholder = "Tipo serviço", @class = "form-control", Title = "Autor" })
                                        @Html.ValidationMessageFor(model => model.IdAutor, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.DropDownListFor(model => model.IdGenero, new SelectList(ViewBag.Generos as List<GeneroResponse>, "id", "nome"), "Nenhum gênero...", htmlAttributes: new { placeholder = "Cliente", @class = "form-control", Title = "Gênero" })
                                        @Html.ValidationMessageFor(model => model.IdGenero, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.EditorFor(model => model.Edicao, new { htmlAttributes = new { placeholder = "Edição", @class = "form-control", Title = "Edição" } })
                                        @Html.ValidationMessageFor(model => model.Edicao, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.EditorFor(model => model.Estoque, new { htmlAttributes = new { placeholder = "Estoque", @class = "form-control", Title = "Estoque" } })
                                        @Html.ValidationMessageFor(model => model.Estoque, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.EditorFor(model => model.Preco, new { htmlAttributes = new { placeholder = "Preço", @class = "form-control", Title = "Preço" } })
                                        @Html.ValidationMessageFor(model => model.Preco, "", new { @class = "text-danger" })
                                    </div>
                                    <input type="submit" value="Gravar" class="btn btn-primary btn-user btn-block" />
                                    @Html.ActionLink("Cancelar", "Consulta", null, new { @class = "btn btn-secondary btn-user btn-block" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
